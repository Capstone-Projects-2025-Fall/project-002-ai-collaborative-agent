"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3044],{18607:e=>{e.exports=JSON.parse('{"url":"redocusaurus/using-single-yaml.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.3","info":{"title":"AI Collab Agent API","description":"The official API documentation for the AI Collab Agent backend.\\nThis API provides services for managing users, projects, tasks, and leveraging AI for collaborative development within the VS Code extension.\\n","version":"1.0.0"},"servers":[{"url":"http://localhost:3000/api/v1","description":"Local Development Server"}],"tags":[{"name":"Projects & Teams","description":"Endpoints for managing projects and team members."},{"name":"Users","description":"Endpoints for managing individual user data."},{"name":"Tasks","description":"Endpoints for creating, updating, and assigning tasks."},{"name":"AI Agent","description":"Endpoints that interact with the AI for suggestions and analysis."}],"paths":{"/projects":{"post":{"tags":["Projects & Teams"],"summary":"Create a new project","description":"Creates a new project and assigns the initial members. This corresponds to the \'Create Team\' use case.","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewProject"}}}},"responses":{"201":{"description":"Project created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Project"}}}},"400":{"description":"Invalid input.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}}}},"/users":{"post":{"tags":["Users"],"summary":"Add a new user (team member)","description":"Adds a new user to the system with their skills and programming languages.","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewUser"}}}},"responses":{"201":{"description":"User created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid input."}}}},"/tasks/auto-allocate/{projectId}":{"post":{"tags":["AI Agent","Tasks"],"summary":"Auto-allocate tasks for a project","description":"Triggers the AI agent to analyze project requirements and team skills to generate and assign tasks.","parameters":[{"in":"path","name":"projectId","required":true,"schema":{"type":"string"},"description":"The ID of the project to allocate tasks for."}],"responses":{"200":{"description":"Tasks allocated successfully.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Task"}}}}},"404":{"description":"Project not found."}}}},"/tasks/{taskId}":{"patch":{"tags":["Tasks"],"summary":"Update a task\'s status","description":"Update a specific property of a task, such as its status (e.g., \'in_progress\', \'complete\').","parameters":[{"in":"path","name":"taskId","required":true,"schema":{"type":"string"},"description":"The ID of the task to update."}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["pending","in_progress","review","complete"]}}}}}},"responses":{"200":{"description":"Task updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"404":{"description":"Task not found."}}}},"/reviews/request":{"post":{"tags":["AI Agent"],"summary":"Request a peer review","description":"Submits a block of code (diff) for peer review and notifies assignees.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"diff":{"type":"string","description":"The code changes to be reviewed."},"refs":{"type":"string","description":"Git references, like branch or commit hash."},"projectId":{"type":"string"},"reviewerIds":{"type":"array","items":{"type":"string"}}}}}}},"responses":{"201":{"description":"Review request created."},"400":{"description":"Invalid input."}}}},"/agent/hint":{"post":{"tags":["AI Agent"],"summary":"Get a real-time coding hint","description":"Sends the current code context to the AI agent to receive a real-time suggestion or hint.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"fileContent":{"type":"string"},"cursorPosition":{"type":"integer"},"context":{"type":"string","description":"Additional context, like project SRS."}}}}}},"responses":{"200":{"description":"Hint provided successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Suggestion"}}}}}}}},"components":{"schemas":{"User":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"d290f1ee-6c54-4b01-90e6-d701748f0851"},"name":{"type":"string","example":"John Doe"},"skills":{"type":"string","example":"Leadership, Design, Analysis"},"programmingLanguages":{"type":"string","example":"Python, JavaScript, TypeScript"},"createdAt":{"type":"string","format":"date-time"}}},"NewUser":{"type":"object","required":["name","skills","programmingLanguages"],"properties":{"name":{"type":"string","example":"Jane Smith"},"skills":{"type":"string","example":"Frontend, UX/UI"},"programmingLanguages":{"type":"string","example":"TypeScript, HTML, CSS"}}},"Project":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"name":{"type":"string","example":"Collaborative Agent MVP"},"description":{"type":"string"},"goals":{"type":"string"},"requirements":{"type":"string"},"selectedMemberIds":{"type":"array","items":{"type":"string","format":"uuid"}},"createdAt":{"type":"string","format":"date-time"}}},"NewProject":{"type":"object","required":["name","description","selectedMemberIds"],"properties":{"name":{"type":"string","example":"Final Year Project"},"description":{"type":"string","example":"Build an AI-powered collaborative tool."},"selectedMemberIds":{"type":"array","items":{"type":"string","format":"uuid","example":["d290f1ee-6c54-4b01-90e6-d701748f0851"]}}}},"Task":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"projectId":{"type":"string","format":"uuid"},"title":{"type":"string","example":"Implement Login UI"},"assigneeId":{"type":"string","format":"uuid"},"status":{"type":"string","enum":["pending","in_progress","review","complete"],"example":"pending"}}},"Suggestion":{"type":"object","properties":{"snippet":{"type":"string","example":"console.log(\'Hello, World!\');"},"rationale":{"type":"string","example":"This variable is not used. Consider removing it."}}},"Error":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"}}}}}}}')}}]);